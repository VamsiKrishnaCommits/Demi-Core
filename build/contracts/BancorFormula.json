{
  "contractName": "BancorFormula",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_connectorBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_connectorWeight",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_connectorBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_connectorWeight",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_sellAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_connectorBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_connectorWeight\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_connectorBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_connectorWeight\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_sellAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Modified from the original by Slava Balasanov https://github.com/bancorprotocol/contracts Split Power.sol out from BancorFormula.sol and replace SafeMath formulas with zeppelin's SafeMath Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements; and to You under the Apache License, Version 2.0. \\\"\",\"kind\":\"dev\",\"methods\":{\"calculatePurchaseReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a token supply, connector balance, weight and a deposit amount (in the connector token), calculates the return for a given conversion (in the main token) Formula: Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)\",\"params\":{\"_connectorBalance\":\"total connector balance\",\"_connectorWeight\":\"connector weight, represented in ppm, 1-1000000\",\"_depositAmount\":\"deposit amount, in connector token\",\"_supply\":\"token total supply\"},\"returns\":{\"_0\":\"purchase return amount\"}},\"calculateSaleReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a token supply, connector balance, weight and a sell amount (in the main token), calculates the return for a given conversion (in the connector token) Formula: Return = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))\",\"params\":{\"_connectorBalance\":\"total connector\",\"_connectorWeight\":\"constant connector Weight, represented in ppm, 1-1000000\",\"_sellAmount\":\"sell amount, in the token itself\",\"_supply\":\"token total supply\"},\"returns\":{\"_0\":\"sale return amount\"}}},\"title\":\"Bancor formula by Bancor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BancorFormula.sol\":\"BancorFormula\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/BancorFormula.sol\":{\"keccak256\":\"0xbfe6aa1ebcdef94bcde5e76039e3c4ff4b0c835d7d0fc3fff5c91556af880599\",\"urls\":[\"bzz-raw://c72a71f413e6e40a8b86305c28ffdb80a25324c967e0011ea78b6c2ff8f0203e\",\"dweb:/ipfs/QmU6eRJaMoE8fACQzZSGFQAiY4ZVBFhwzxHaHu6BJZsKov\"]},\"project:/contracts/Math/Power.sol\":{\"keccak256\":\"0x9ad38c8f9d5feae8989c3b21dce04e163be10338be0b09d3306a58d30020b05c\",\"urls\":[\"bzz-raw://2b47041ece2f8cbcea1e75746af237d0a9f17a326bc1c24b0f9cdcca96a9b9ca\",\"dweb:/ipfs/QmQuy6mdDXsMhte3kGtdH6HyQtnHHCzoYEL2P7eq3jZgSP\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806329a00e7c1461003b57806349f9b0f71461006b575b600080fd5b61005560048036038101906100509190610e21565b61009b565b6040516100629190610e97565b60405180910390f35b61008560048036038101906100809190610e21565b6101a0565b6040516100929190610e97565b60405180910390f35b600080851180156100ac5750600084115b80156100be575060008363ffffffff16115b80156100d95750620f424063ffffffff168363ffffffff1611155b6100e257600080fd5b60008214156100f45760009050610198565b620f424063ffffffff168363ffffffff161415610137576101308461012284886102d990919063ffffffff16565b6102ef90919063ffffffff16565b9050610198565b600080600061014f878661030590919063ffffffff16565b9050610160818888620f424061031b565b809350819450505060008260ff16610181858b6102d990919063ffffffff16565b901c905088816101919190610ee1565b9450505050505b949350505050565b600080851180156101b15750600084115b80156101c3575060008363ffffffff16115b80156101de5750620f424063ffffffff168363ffffffff1611155b80156101ea5750848211155b6101f357600080fd5b600082141561020557600090506102d1565b84821415610215578390506102d1565b620f424063ffffffff168363ffffffff161415610258576102518561024384876102d990919063ffffffff16565b6102ef90919063ffffffff16565b90506102d1565b600080600084886102699190610ee1565b905061027a8882620f42408961031b565b8093508194505050600061029784896102d990919063ffffffff16565b905060008360ff1689901b90506102c9856102bb838561038790919063ffffffff16565b6102ef90919063ffffffff16565b955050505050505b949350505050565b600081836102e79190610f15565b905092915050565b600081836102fd9190610f9e565b905092915050565b600081836103139190610fcf565b905092915050565b60008060008363ffffffff168563ffffffff16610338898961039d565b6103429190610f15565b61034c9190610f9e565b905060006103598261052e565b905061037781607f61036b9190611032565b60ff1683901c82610610565b8193509350505094509492505050565b600081836103959190610ee1565b905092915050565b60007001ffffffffffffffffffffffffffffffff8311156103c1576103c0611066565b5b600080836f80000000000000000000000000000000866103e19190610f15565b6103eb9190610f9e565b9050700100000000000000000000000000000000811061045957600061042b6f80000000000000000000000000000000836104269190610f9e565b610d1f565b90508060ff1682901c91506f800000000000000000000000000000008160ff166104559190610f15565b9250505b6f80000000000000000000000000000000811115610501576000607f90505b60008160ff1611156104ff576f8000000000000000000000000000000082836104a19190610f15565b6104ab9190610f9e565b915070010000000000000000000000000000000082106104ee57600182901c91506001816104d99190611032565b60ff166001901b836104eb9190610fcf565b92505b806104f890611095565b9050610478565b505b607a60ff166f02c5c85fdf473de6af278ece600fcbda836105229190610f15565b901c9250505092915050565b600080602090506000607f90505b8060ff1660018361054d91906110bf565b60ff1610156105a35760006002828461056691906110bf565b61057091906110f6565b90508460008260ff166080811061058a57610589611127565b5b0154106105995780925061059d565b8091505b5061053c565b8360008260ff16608081106105bb576105ba611127565b5b0154106105cc57809250505061060b565b8360008360ff16608081106105e4576105e3611127565b5b0154106105f557819250505061060b565b600061060457610603611066565b5b6000925050505b919050565b60008083905060008360ff1685836106289190610f15565b901c91506f03442c4e6074a82f1797f72ac0000000826106489190610f15565b816106539190610fcf565b90508360ff1685836106659190610f15565b901c91506f0116b96f757c380fb287fd0e40000000826106859190610f15565b816106909190610fcf565b90508360ff1685836106a29190610f15565b901c91506e45ae5bdd5f0e03eca1ff4390000000826106c19190610f15565b816106cc9190610fcf565b90508360ff1685836106de9190610f15565b901c91506e0defabf91302cd95b9ffda50000000826106fd9190610f15565b816107089190610fcf565b90508360ff16858361071a9190610f15565b901c91506e02529ca9832b22439efff9b8000000826107399190610f15565b816107449190610fcf565b90508360ff1685836107569190610f15565b901c91506d54f1cf12bd04e516b6da88000000826107749190610f15565b8161077f9190610fcf565b90508360ff1685836107919190610f15565b901c91506d0a9e39e257a09ca2d6db51000000826107af9190610f15565b816107ba9190610fcf565b90508360ff1685836107cc9190610f15565b901c91506d012e066e7b839fa050c309000000826107ea9190610f15565b816107f59190610fcf565b90508360ff1685836108079190610f15565b901c91506c1e33d7d926c329a1ad1a800000826108249190610f15565b8161082f9190610fcf565b90508360ff1685836108419190610f15565b901c91506c02bee513bdb4a6b19b5f8000008261085e9190610f15565b816108699190610fcf565b90508360ff16858361087b9190610f15565b901c91506b3a9316fa79b88eccf2a00000826108979190610f15565b816108a29190610fcf565b90508360ff1685836108b49190610f15565b901c91506b048177ebe1fa812375200000826108d09190610f15565b816108db9190610fcf565b90508360ff1685836108ed9190610f15565b901c91506a5263fe90242dcbacf00000826109089190610f15565b816109139190610fcf565b90508360ff1685836109259190610f15565b901c91506a057e22099c030d94100000826109409190610f15565b8161094b9190610fcf565b90508360ff16858361095d9190610f15565b901c91506957e22099c030d9410000826109779190610f15565b816109829190610fcf565b90508360ff1685836109949190610f15565b901c915069052b6b54569976310000826109ae9190610f15565b816109b99190610fcf565b90508360ff1685836109cb9190610f15565b901c9150684985f67696bf748000826109e49190610f15565b816109ef9190610fcf565b90508360ff168583610a019190610f15565b901c91506803dea12ea99e49800082610a1a9190610f15565b81610a259190610fcf565b90508360ff168583610a379190610f15565b901c91506731880f2214b6e00082610a4f9190610f15565b81610a5a9190610fcf565b90508360ff168583610a6c9190610f15565b901c915067025bcff56eb3600082610a849190610f15565b81610a8f9190610fcf565b90508360ff168583610aa19190610f15565b901c9150661b722e10ab100082610ab89190610f15565b81610ac39190610fcf565b90508360ff168583610ad59190610f15565b901c91506601317c7007700082610aec9190610f15565b81610af79190610fcf565b90508360ff168583610b099190610f15565b901c9150650cba84aafa0082610b1f9190610f15565b81610b2a9190610fcf565b90508360ff168583610b3c9190610f15565b901c91506482573a0a0082610b519190610f15565b81610b5c9190610fcf565b90508360ff168583610b6e9190610f15565b901c91506405035ad90082610b839190610f15565b81610b8e9190610fcf565b90508360ff168583610ba09190610f15565b901c9150632f881b0082610bb49190610f15565b81610bbf9190610fcf565b90508360ff168583610bd19190610f15565b901c91506301b2934082610be59190610f15565b81610bf09190610fcf565b90508360ff168583610c029190610f15565b901c9150620efc4082610c159190610f15565b81610c209190610fcf565b90508360ff168583610c329190610f15565b901c9150617fe082610c449190610f15565b81610c4f9190610fcf565b90508360ff168583610c619190610f15565b901c915061042082610c739190610f15565b81610c7e9190610fcf565b90508360ff168583610c909190610f15565b901c9150602182610ca19190610f15565b81610cac9190610fcf565b90508360ff168583610cbe9190610f15565b901c9150600182610ccf9190610f15565b81610cda9190610fcf565b90508360ff166001901b856f0688589cc0e9505e2f2fee558000000083610d019190610f9e565b610d0b9190610fcf565b610d159190610fcf565b9250505092915050565b600080600090506000839050610100811015610d5f575b6001811115610d5a57600181901c9050600182610d5391906110bf565b9150610d36565b610da0565b6000608090505b60008160ff161115610d9e578060ff166001901b8210610d8f578060ff1682901c915080831792505b60018160ff16901c9050610d66565b505b8192505050919050565b600080fd5b6000819050919050565b610dc281610daf565b8114610dcd57600080fd5b50565b600081359050610ddf81610db9565b92915050565b600063ffffffff82169050919050565b610dfe81610de5565b8114610e0957600080fd5b50565b600081359050610e1b81610df5565b92915050565b60008060008060808587031215610e3b57610e3a610daa565b5b6000610e4987828801610dd0565b9450506020610e5a87828801610dd0565b9350506040610e6b87828801610e0c565b9250506060610e7c87828801610dd0565b91505092959194509250565b610e9181610daf565b82525050565b6000602082019050610eac6000830184610e88565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eec82610daf565b9150610ef783610daf565b925082821015610f0a57610f09610eb2565b5b828203905092915050565b6000610f2082610daf565b9150610f2b83610daf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f6457610f63610eb2565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fa982610daf565b9150610fb483610daf565b925082610fc457610fc3610f6f565b5b828204905092915050565b6000610fda82610daf565b9150610fe583610daf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561101a57611019610eb2565b5b828201905092915050565b600060ff82169050919050565b600061103d82611025565b915061104883611025565b92508282101561105b5761105a610eb2565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60006110a082611025565b915060008214156110b4576110b3610eb2565b5b600182039050919050565b60006110ca82611025565b91506110d583611025565b92508260ff038211156110eb576110ea610eb2565b5b828201905092915050565b600061110182611025565b915061110c83611025565b92508261111c5761111b610f6f565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212204e7169830a7f542714d234beda0cb8bf5f80363299448cd66ef53976cd551ac764736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:190:14",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:14",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:14",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:14",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:14",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:14"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:14"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4857:14",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:14",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:14",
                "type": ""
              }
            ],
            "src": "7:75:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:14",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:14"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:14",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:14"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:14",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:14"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:14",
                "type": ""
              }
            ],
            "src": "334:77:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:14"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:14"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:14"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:14",
                "type": ""
              }
            ],
            "src": "417:122:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:14"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:14",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:14",
                "type": ""
              }
            ],
            "src": "545:139:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "734:49:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "744:33:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "759:5:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "766:10:14",
                        "type": "",
                        "value": "0xffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "755:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:22:14"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "744:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "716:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "726:7:14",
                "type": ""
              }
            ],
            "src": "690:93:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "831:78:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "887:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "896:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "899:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "889:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "889:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "889:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "854:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "878:5:14"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint32",
                              "nodeType": "YulIdentifier",
                              "src": "861:16:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "861:23:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "851:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "851:34:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "844:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "844:42:14"
                  },
                  "nodeType": "YulIf",
                  "src": "841:62:14"
                }
              ]
            },
            "name": "validator_revert_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "824:5:14",
                "type": ""
              }
            ],
            "src": "789:120:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "966:86:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "976:29:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "998:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "985:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "985:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "976:5:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1040:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "1014:25:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1014:32:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1014:32:14"
                }
              ]
            },
            "name": "abi_decode_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "944:6:14",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "952:3:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:14",
                "type": ""
              }
            ],
            "src": "915:137:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1174:647:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1221:83:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1223:77:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1223:79:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1223:79:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1195:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1204:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1191:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1191:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1216:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1187:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1187:33:14"
                  },
                  "nodeType": "YulIf",
                  "src": "1184:120:14"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1314:117:14",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1329:15:14",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1343:1:14",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1333:6:14",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1358:63:14",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1393:9:14"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1404:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1389:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1389:22:14"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1413:7:14"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1368:20:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1368:53:14"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1358:6:14"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1441:118:14",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1456:16:14",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1470:2:14",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1460:6:14",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1486:63:14",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1521:9:14"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1532:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1517:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1517:22:14"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1541:7:14"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1496:20:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:53:14"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1486:6:14"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1569:117:14",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1584:16:14",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1598:2:14",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1588:6:14",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1614:62:14",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1648:9:14"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1659:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1644:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1644:22:14"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1668:7:14"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "1624:19:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1624:52:14"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1614:6:14"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1696:118:14",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1711:16:14",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1725:2:14",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1715:6:14",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1741:63:14",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1776:9:14"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1787:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1772:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1772:22:14"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1796:7:14"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1751:20:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1751:53:14"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1741:6:14"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1120:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1131:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1143:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1151:6:14",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1159:6:14",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1167:6:14",
                "type": ""
              }
            ],
            "src": "1058:763:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1892:53:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1909:3:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1932:5:14"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1914:17:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1914:24:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1902:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1902:37:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1902:37:14"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1880:5:14",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1887:3:14",
                "type": ""
              }
            ],
            "src": "1827:118:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2049:124:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2059:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2071:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2082:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2067:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2067:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2059:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2139:6:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2152:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2163:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2148:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2148:17:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2095:43:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2095:71:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2095:71:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2021:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2033:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2044:4:14",
                "type": ""
              }
            ],
            "src": "1951:222:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2207:152:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2224:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2227:77:14",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2217:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2217:88:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2217:88:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2321:1:14",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2324:4:14",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2314:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2314:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2314:15:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2345:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2348:4:14",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2338:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2338:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2338:15:14"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2179:180:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2410:146:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2420:25:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2443:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2425:17:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2425:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2420:1:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2454:25:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2477:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2459:17:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2459:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2454:1:14"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2501:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2503:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2503:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2503:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2495:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2498:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2492:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2492:8:14"
                  },
                  "nodeType": "YulIf",
                  "src": "2489:34:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2533:17:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2545:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2548:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2541:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2541:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "2533:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2396:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2399:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "2405:4:14",
                "type": ""
              }
            ],
            "src": "2365:191:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2610:300:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2620:25:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2643:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2625:17:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2625:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2620:1:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2654:25:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2677:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2659:17:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2659:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2654:1:14"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2852:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2854:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2854:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2854:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2764:1:14"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2757:6:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2757:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2750:6:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2750:17:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2772:1:14"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2779:66:14",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2847:1:14"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2775:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2775:74:14"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2769:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2769:81:14"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2746:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2746:105:14"
                  },
                  "nodeType": "YulIf",
                  "src": "2743:131:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2884:20:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2899:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2902:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2895:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2895:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2884:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2593:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2596:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2602:7:14",
                "type": ""
              }
            ],
            "src": "2562:348:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2944:152:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2961:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2964:77:14",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2954:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2954:88:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2954:88:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3058:1:14",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3061:4:14",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3051:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3051:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3051:15:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3082:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3085:4:14",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3075:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3075:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3075:15:14"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "2916:180:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3144:143:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3154:25:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3177:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3159:17:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3159:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3154:1:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3188:25:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3211:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3193:17:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3193:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3188:1:14"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3235:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "3237:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3237:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3237:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3232:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3225:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3225:9:14"
                  },
                  "nodeType": "YulIf",
                  "src": "3222:35:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3267:14:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3276:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3279:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3272:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3272:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "3267:1:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3133:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3136:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3142:1:14",
                "type": ""
              }
            ],
            "src": "3102:185:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3337:261:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3347:25:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3370:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3352:17:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3352:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3347:1:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3381:25:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3404:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3386:17:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3386:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3381:1:14"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3544:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3546:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3546:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3546:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3465:1:14"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3472:66:14",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3540:1:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3468:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3468:74:14"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3462:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3462:81:14"
                  },
                  "nodeType": "YulIf",
                  "src": "3459:107:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3576:16:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3587:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3590:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3583:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3583:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3576:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3324:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3327:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3333:3:14",
                "type": ""
              }
            ],
            "src": "3293:305:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3647:43:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3657:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3672:5:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3679:4:14",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3668:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3668:16:14"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3657:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3629:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3639:7:14",
                "type": ""
              }
            ],
            "src": "3604:86:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3739:142:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3749:23:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3770:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "3754:15:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3754:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3749:1:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3781:23:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3802:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "3786:15:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3786:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3781:1:14"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3826:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3828:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3828:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3828:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3820:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3823:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3817:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3817:8:14"
                  },
                  "nodeType": "YulIf",
                  "src": "3814:34:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3858:17:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3870:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3873:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3866:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3866:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3858:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3725:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3728:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3734:4:14",
                "type": ""
              }
            ],
            "src": "3696:185:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3915:152:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3932:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3935:77:14",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3925:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3925:88:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3925:88:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4029:1:14",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4032:4:14",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4022:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4022:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4022:15:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4053:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4056:4:14",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4046:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4046:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4046:15:14"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "3887:180:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4114:126:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4124:31:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4149:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4133:15:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4133:22:14"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4124:5:14"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4183:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4185:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4185:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4185:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4170:5:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4177:4:14",
                        "type": "",
                        "value": "0x00"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4167:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4167:15:14"
                  },
                  "nodeType": "YulIf",
                  "src": "4164:41:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4214:20:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4225:5:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4232:1:14",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4221:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4221:13:14"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "4214:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4100:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "4110:3:14",
                "type": ""
              }
            ],
            "src": "4073:167:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4288:195:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4298:23:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4319:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4303:15:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4303:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4298:1:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4330:23:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4351:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4335:15:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4335:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4330:1:14"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4429:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4431:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4431:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4431:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4412:1:14"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4419:4:14",
                            "type": "",
                            "value": "0xff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4425:1:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4415:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4415:12:14"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4409:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4409:19:14"
                  },
                  "nodeType": "YulIf",
                  "src": "4406:45:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4461:16:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4472:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4475:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4468:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4468:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4461:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4275:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4278:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4284:3:14",
                "type": ""
              }
            ],
            "src": "4246:237:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4529:139:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4539:23:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4560:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4544:15:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4544:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4539:1:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4571:23:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4592:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4576:15:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4576:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4571:1:14"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4616:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "4618:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4618:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4618:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4613:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4606:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4606:9:14"
                  },
                  "nodeType": "YulIf",
                  "src": "4603:35:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4648:14:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4657:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4660:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4653:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4653:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4648:1:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4518:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4521:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "4527:1:14",
                "type": ""
              }
            ],
            "src": "4489:179:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4702:152:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4719:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4722:77:14",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4712:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4712:88:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4712:88:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4816:1:14",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4819:4:14",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4809:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4809:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4809:15:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4840:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4843:4:14",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4833:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4833:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4833:15:14"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "4674:180:14"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint32t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint8(x, y) -> r {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "10779:3239:6:-:0;;;;;;;;;;;;;3602:36:10;3583:11;3596:2;3583:16;;;;;;;:::i;:::-;;;:55;;;;3664:36;3645:11;3658:2;3645:16;;;;;;;:::i;:::-;;;:55;;;;3726:36;3707:11;3720:2;3707:16;;;;;;;:::i;:::-;;;:55;;;;3788:36;3769:11;3782:2;3769:16;;;;;;;:::i;:::-;;;:55;;;;3850:36;3831:11;3844:2;3831:16;;;;;;;:::i;:::-;;;:55;;;;3912:36;3893:11;3906:2;3893:16;;;;;;;:::i;:::-;;;:55;;;;3974:36;3955:11;3968:2;3955:16;;;;;;;:::i;:::-;;;:55;;;;4036:36;4017:11;4030:2;4017:16;;;;;;;:::i;:::-;;;:55;;;;4098:36;4079:11;4092:2;4079:16;;;;;;;:::i;:::-;;;:55;;;;4160:36;4141:11;4154:2;4141:16;;;;;;;:::i;:::-;;;:55;;;;4222:36;4203:11;4216:2;4203:16;;;;;;;:::i;:::-;;;:55;;;;4284:36;4265:11;4278:2;4265:16;;;;;;;:::i;:::-;;;:55;;;;4346:36;4327:11;4340:2;4327:16;;;;;;;:::i;:::-;;;:55;;;;4408:36;4389:11;4402:2;4389:16;;;;;;;:::i;:::-;;;:55;;;;4470:36;4451:11;4464:2;4451:16;;;;;;;:::i;:::-;;;:55;;;;4532:36;4513:11;4526:2;4513:16;;;;;;;:::i;:::-;;;:55;;;;4594:36;4575:11;4588:2;4575:16;;;;;;;:::i;:::-;;;:55;;;;4656:36;4637:11;4650:2;4637:16;;;;;;;:::i;:::-;;;:55;;;;4718:36;4699:11;4712:2;4699:16;;;;;;;:::i;:::-;;;:55;;;;4780:36;4761:11;4774:2;4761:16;;;;;;;:::i;:::-;;;:55;;;;4842:36;4823:11;4836:2;4823:16;;;;;;;:::i;:::-;;;:55;;;;4904:36;4885:11;4898:2;4885:16;;;;;;;:::i;:::-;;;:55;;;;4966:36;4947:11;4960:2;4947:16;;;;;;;:::i;:::-;;;:55;;;;5028:36;5009:11;5022:2;5009:16;;;;;;;:::i;:::-;;;:55;;;;5090:36;5071:11;5084:2;5071:16;;;;;;;:::i;:::-;;;:55;;;;5152:36;5133:11;5146:2;5133:16;;;;;;;:::i;:::-;;;:55;;;;5214:36;5195:11;5208:2;5195:16;;;;;;;:::i;:::-;;;:55;;;;5276:36;5257:11;5270:2;5257:16;;;;;;;:::i;:::-;;;:55;;;;5338:36;5319:11;5332:2;5319:16;;;;;;;:::i;:::-;;;:55;;;;5400:36;5381:11;5394:2;5381:16;;;;;;;:::i;:::-;;;:55;;;;5462:36;5443:11;5456:2;5443:16;;;;;;;:::i;:::-;;;:55;;;;5524:36;5505:11;5518:2;5505:16;;;;;;;:::i;:::-;;;:55;;;;5586:36;5567:11;5580:2;5567:16;;;;;;;:::i;:::-;;;:55;;;;5648:36;5629:11;5642:2;5629:16;;;;;;;:::i;:::-;;;:55;;;;5710:36;5691:11;5704:2;5691:16;;;;;;;:::i;:::-;;;:55;;;;5772:36;5753:11;5766:2;5753:16;;;;;;;:::i;:::-;;;:55;;;;5834:36;5815:11;5828:2;5815:16;;;;;;;:::i;:::-;;;:55;;;;5896:36;5877:11;5890:2;5877:16;;;;;;;:::i;:::-;;;:55;;;;5958:36;5939:11;5952:2;5939:16;;;;;;;:::i;:::-;;;:55;;;;6020:36;6001:11;6014:2;6001:16;;;;;;;:::i;:::-;;;:55;;;;6082:36;6063:11;6076:2;6063:16;;;;;;;:::i;:::-;;;:55;;;;6144:36;6125:11;6138:2;6125:16;;;;;;;:::i;:::-;;;:55;;;;6206:36;6187:11;6200:2;6187:16;;;;;;;:::i;:::-;;;:55;;;;6268:36;6249:11;6262:2;6249:16;;;;;;;:::i;:::-;;;:55;;;;6330:36;6311:11;6324:2;6311:16;;;;;;;:::i;:::-;;;:55;;;;6392:36;6373:11;6386:2;6373:16;;;;;;;:::i;:::-;;;:55;;;;6454:36;6435:11;6448:2;6435:16;;;;;;;:::i;:::-;;;:55;;;;6516:36;6497:11;6510:2;6497:16;;;;;;;:::i;:::-;;;:55;;;;6578:36;6559:11;6572:2;6559:16;;;;;;;:::i;:::-;;;:55;;;;6640:36;6621:11;6634:2;6621:16;;;;;;;:::i;:::-;;;:55;;;;6702:36;6683:11;6696:2;6683:16;;;;;;;:::i;:::-;;;:55;;;;6764:36;6745:11;6758:2;6745:16;;;;;;;:::i;:::-;;;:55;;;;6826:36;6807:11;6820:2;6807:16;;;;;;;:::i;:::-;;;:55;;;;6888:36;6869:11;6882:2;6869:16;;;;;;;:::i;:::-;;;:55;;;;6950:36;6931:11;6944:2;6931:16;;;;;;;:::i;:::-;;;:55;;;;7012:36;6993:11;7006:2;6993:16;;;;;;;:::i;:::-;;;:55;;;;7074:36;7055:11;7068:2;7055:16;;;;;;;:::i;:::-;;;:55;;;;7136:36;7117:11;7130:2;7117:16;;;;;;;:::i;:::-;;;:55;;;;7198:36;7179:11;7192:2;7179:16;;;;;;;:::i;:::-;;;:55;;;;7260:36;7241:11;7254:2;7241:16;;;;;;;:::i;:::-;;;:55;;;;7322:36;7303:11;7316:2;7303:16;;;;;;;:::i;:::-;;;:55;;;;7384:36;7365:11;7378:2;7365:16;;;;;;;:::i;:::-;;;:55;;;;7446:36;7427:11;7440:2;7427:16;;;;;;;:::i;:::-;;;:55;;;;7508:36;7489:11;7502:2;7489:16;;;;;;;:::i;:::-;;;:55;;;;7570:36;7551:11;7564:2;7551:16;;;;;;;:::i;:::-;;;:55;;;;7632:36;7613:11;7626:2;7613:16;;;;;;;:::i;:::-;;;:55;;;;7694:36;7675:11;7688:2;7675:16;;;;;;;:::i;:::-;;;:55;;;;7756:36;7737:11;7750:2;7737:16;;;;;;;:::i;:::-;;;:55;;;;7818:36;7799:11;7811:3;7799:16;;;;;;;:::i;:::-;;;:55;;;;7880:36;7861:11;7873:3;7861:16;;;;;;;:::i;:::-;;;:55;;;;7942:36;7923:11;7935:3;7923:16;;;;;;;:::i;:::-;;;:55;;;;8004:36;7985:11;7997:3;7985:16;;;;;;;:::i;:::-;;;:55;;;;8066:36;8047:11;8059:3;8047:16;;;;;;;:::i;:::-;;;:55;;;;8128:36;8109:11;8121:3;8109:16;;;;;;;:::i;:::-;;;:55;;;;8190:36;8171:11;8183:3;8171:16;;;;;;;:::i;:::-;;;:55;;;;8252:36;8233:11;8245:3;8233:16;;;;;;;:::i;:::-;;;:55;;;;8314:36;8295:11;8307:3;8295:16;;;;;;;:::i;:::-;;;:55;;;;8376:36;8357:11;8369:3;8357:16;;;;;;;:::i;:::-;;;:55;;;;8438:36;8419:11;8431:3;8419:16;;;;;;;:::i;:::-;;;:55;;;;8500:36;8481:11;8493:3;8481:16;;;;;;;:::i;:::-;;;:55;;;;8562:36;8543:11;8555:3;8543:16;;;;;;;:::i;:::-;;;:55;;;;8624:36;8605:11;8617:3;8605:16;;;;;;;:::i;:::-;;;:55;;;;8686:36;8667:11;8679:3;8667:16;;;;;;;:::i;:::-;;;:55;;;;8748:36;8729:11;8741:3;8729:16;;;;;;;:::i;:::-;;;:55;;;;8810:36;8791:11;8803:3;8791:16;;;;;;;:::i;:::-;;;:55;;;;8872:36;8853:11;8865:3;8853:16;;;;;;;:::i;:::-;;;:55;;;;8934:36;8915:11;8927:3;8915:16;;;;;;;:::i;:::-;;;:55;;;;8996:36;8977:11;8989:3;8977:16;;;;;;;:::i;:::-;;;:55;;;;9058:36;9039:11;9051:3;9039:16;;;;;;;:::i;:::-;;;:55;;;;9120:36;9101:11;9113:3;9101:16;;;;;;;:::i;:::-;;;:55;;;;9182:36;9163:11;9175:3;9163:16;;;;;;;:::i;:::-;;;:55;;;;9244:36;9225:11;9237:3;9225:16;;;;;;;:::i;:::-;;;:55;;;;9306:36;9287:11;9299:3;9287:16;;;;;;;:::i;:::-;;;:55;;;;9368:36;9349:11;9361:3;9349:16;;;;;;;:::i;:::-;;;:55;;;;9430:36;9411:11;9423:3;9411:16;;;;;;;:::i;:::-;;;:55;;;;9492:36;9473:11;9485:3;9473:16;;;;;;;:::i;:::-;;;:55;;;;10779:3239:6;;7:180:14;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;10779:3239:6;;;;;;;",
  "deployedSourceMap": "10779:3239:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11508:864;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12982:1034;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11508:864;11673:7;11730:1;11720:7;:11;:36;;;;;11755:1;11735:17;:21;11720:36;:60;;;;;11779:1;11760:16;:20;;;11720:60;:94;;;;;10883:7;11784:30;;:16;:30;;;;11720:94;11712:103;;;;;;11885:1;11867:14;:19;11863:48;;;11903:1;11896:8;;;;11863:48;10883:7;11962:30;;:16;:30;;;11958:108;;;12009:50;12041:17;12009:27;12021:14;12009:7;:11;;:27;;;;:::i;:::-;:31;;:50;;;;:::i;:::-;12002:57;;;;11958:108;12072:14;12092:15;12113:13;12129:37;12148:17;12129:14;:18;;:37;;;;:::i;:::-;12113:53;;12194:73;12207:5;12214:17;12233:16;10883:7;12194:5;:73::i;:::-;12172:95;;;;;;;;12273:22;12321:9;12298:32;;:19;12310:6;12298:7;:11;;:19;;;;:::i;:::-;:32;;12273:57;;12360:7;12343:14;:24;;;;:::i;:::-;12336:31;;;;;;11508:864;;;;;;;:::o;12982:1034::-;13139:7;13196:1;13186:7;:11;:36;;;;;13221:1;13201:17;:21;13186:36;:60;;;;;13245:1;13226:16;:20;;;13186:60;:94;;;;;10883:7;13250:30;;:16;:30;;;;13186:94;:120;;;;;13299:7;13284:11;:22;;13186:120;13178:129;;;;;;13371:1;13356:11;:16;13352:45;;;13389:1;13382:8;;;;13352:45;13472:7;13457:11;:22;13453:67;;;13496:17;13489:24;;;;13453:67;10883:7;13571:30;;:16;:30;;;13567:105;;;13618:47;13657:7;13618:34;13640:11;13618:17;:21;;:34;;;;:::i;:::-;:38;;:47;;;;:::i;:::-;13611:54;;;;13567:105;13678:14;13698:15;13719:13;13745:11;13735:7;:21;;;;:::i;:::-;13719:37;;13784:63;13797:7;13806:5;10883:7;13825:16;13784:5;:63::i;:::-;13762:85;;;;;;;;13853:18;13874:29;13896:6;13874:17;:21;;:29;;;;:::i;:::-;13853:50;;13909:18;13951:9;13930:30;;:17;:30;;13909:51;;13973:38;14004:6;13973:26;13988:10;13973;:14;;:26;;;;:::i;:::-;:30;;:38;;;;:::i;:::-;13966:45;;;;;;;12982:1034;;;;;;;:::o;3451:96:5:-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;10760:346:10:-;10859:7;10868:5;10882:22;10936:5;10907:34;;10928:5;10907:26;;:18;10910:6;10918;10907:2;:18::i;:::-;:26;;;;:::i;:::-;:34;;;;:::i;:::-;10882:59;;10948:15;10966:41;10992:14;10966:25;:41::i;:::-;10948:59;;11022:66;11066:9;566:3;11050:25;;;;:::i;:::-;11031:45;;:14;:45;;11078:9;11022:8;:66::i;:::-;11090:9;11014:86;;;;;;10760:346;;;;;;;:::o;3108:96:5:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;11604:829:10:-;11681:7;949:35;11704:10;:21;;11697:29;;;;:::i;:::-;;11735:11;11757:9;11792:12;799:35;11769:10;:20;;;;:::i;:::-;:35;;;;:::i;:::-;11757:47;;874:35;11905:1;:12;11901:134;;11928:11;11942:22;799:35;11952:1;:11;;;;:::i;:::-;11942:9;:22::i;:::-;11928:36;;11979:5;11973:11;;;;;;;799:35;12012:5;:15;;;;;;:::i;:::-;12006:21;;11919:116;11901:134;799:35;12135:1;:11;12131:245;;;12162:7;566:3;12162:23;;12157:212;12191:1;12187;:5;;;12157:212;;;799:35;12219:1;12215;:5;;;;:::i;:::-;12214:17;;;;:::i;:::-;12210:21;;874:35;12263:1;:12;12259:101;;12296:1;12290:7;;;;;12346:1;12342;:5;;;;:::i;:::-;12334:14;;426:1;12334:14;;12327:21;;;;;:::i;:::-;;;12259:101;12194:3;;;;:::i;:::-;;;12157:212;;;;12131:245;1297:3;12391:36;;1219:33;12392:3;:18;;;;:::i;:::-;12391:36;;12384:43;;;;11604:829;;;;:::o;13340:443::-;13410:5;13424:8;520:2;13424:24;;13455:8;566:3;13455:24;;13488:147;13504:2;13495:11;;13500:1;13495:2;:6;;;;:::i;:::-;:11;;;13488:147;;;13517:9;13541:1;13535:2;13530;:7;;;;:::i;:::-;13529:13;;;;:::i;:::-;13517:25;;13575:2;13555:11;13567:3;13555:16;;;;;;;;;:::i;:::-;;;;:22;13551:76;;13593:3;13588:8;;13551:76;;;13624:3;13619:8;;13551:76;13508:127;13488:147;;;13666:2;13647:11;13659:2;13647:15;;;;;;;;;:::i;:::-;;;;:21;13643:45;;13686:2;13679:9;;;;;;13643:45;13718:2;13699:11;13711:2;13699:15;;;;;;;;;:::i;:::-;;;;:21;13695:45;;13738:2;13731:9;;;;;;13695:45;13756:5;13749:13;;;;:::i;:::-;;13776:1;13769:8;;;;13340:443;;;;:::o;14332:3896::-;14403:7;14419:10;14432:2;14419:15;;14441:11;14483:10;14470:23;;14476:2;14471;:7;;;;:::i;:::-;14470:23;;14465:28;;14512:34;14507:2;:39;;;;:::i;:::-;14500:46;;;;;:::i;:::-;;;14595:10;14582:23;;14588:2;14583;:7;;;;:::i;:::-;14582:23;;14577:28;;14624:34;14619:2;:39;;;;:::i;:::-;14612:46;;;;;:::i;:::-;;;14707:10;14694:23;;14700:2;14695;:7;;;;:::i;:::-;14694:23;;14689:28;;14736:34;14731:2;:39;;;;:::i;:::-;14724:46;;;;;:::i;:::-;;;14819:10;14806:23;;14812:2;14807;:7;;;;:::i;:::-;14806:23;;14801:28;;14848:34;14843:2;:39;;;;:::i;:::-;14836:46;;;;;:::i;:::-;;;14931:10;14918:23;;14924:2;14919;:7;;;;:::i;:::-;14918:23;;14913:28;;14960:34;14955:2;:39;;;;:::i;:::-;14948:46;;;;;:::i;:::-;;;15043:10;15030:23;;15036:2;15031;:7;;;;:::i;:::-;15030:23;;15025:28;;15072:34;15067:2;:39;;;;:::i;:::-;15060:46;;;;;:::i;:::-;;;15155:10;15142:23;;15148:2;15143;:7;;;;:::i;:::-;15142:23;;15137:28;;15184:34;15179:2;:39;;;;:::i;:::-;15172:46;;;;;:::i;:::-;;;15267:10;15254:23;;15260:2;15255;:7;;;;:::i;:::-;15254:23;;15249:28;;15296:34;15291:2;:39;;;;:::i;:::-;15284:46;;;;;:::i;:::-;;;15379:10;15366:23;;15372:2;15367;:7;;;;:::i;:::-;15366:23;;15361:28;;15408:34;15403:2;:39;;;;:::i;:::-;15396:46;;;;;:::i;:::-;;;15493:10;15480:23;;15486:2;15481;:7;;;;:::i;:::-;15480:23;;15475:28;;15522:34;15517:2;:39;;;;:::i;:::-;15510:46;;;;;:::i;:::-;;;15607:10;15594:23;;15600:2;15595;:7;;;;:::i;:::-;15594:23;;15589:28;;15636:34;15631:2;:39;;;;:::i;:::-;15624:46;;;;;:::i;:::-;;;15721:10;15708:23;;15714:2;15709;:7;;;;:::i;:::-;15708:23;;15703:28;;15750:34;15745:2;:39;;;;:::i;:::-;15738:46;;;;;:::i;:::-;;;15835:10;15822:23;;15828:2;15823;:7;;;;:::i;:::-;15822:23;;15817:28;;15864:34;15859:2;:39;;;;:::i;:::-;15852:46;;;;;:::i;:::-;;;15949:10;15936:23;;15942:2;15937;:7;;;;:::i;:::-;15936:23;;15931:28;;15978:34;15973:2;:39;;;;:::i;:::-;15966:46;;;;;:::i;:::-;;;16063:10;16050:23;;16056:2;16051;:7;;;;:::i;:::-;16050:23;;16045:28;;16092:34;16087:2;:39;;;;:::i;:::-;16080:46;;;;;:::i;:::-;;;16177:10;16164:23;;16170:2;16165;:7;;;;:::i;:::-;16164:23;;16159:28;;16206:34;16201:2;:39;;;;:::i;:::-;16194:46;;;;;:::i;:::-;;;16291:10;16278:23;;16284:2;16279;:7;;;;:::i;:::-;16278:23;;16273:28;;16320:34;16315:2;:39;;;;:::i;:::-;16308:46;;;;;:::i;:::-;;;16405:10;16392:23;;16398:2;16393;:7;;;;:::i;:::-;16392:23;;16387:28;;16434:34;16429:2;:39;;;;:::i;:::-;16422:46;;;;;:::i;:::-;;;16519:10;16506:23;;16512:2;16507;:7;;;;:::i;:::-;16506:23;;16501:28;;16548:34;16543:2;:39;;;;:::i;:::-;16536:46;;;;;:::i;:::-;;;16633:10;16620:23;;16626:2;16621;:7;;;;:::i;:::-;16620:23;;16615:28;;16662:34;16657:2;:39;;;;:::i;:::-;16650:46;;;;;:::i;:::-;;;16747:10;16734:23;;16740:2;16735;:7;;;;:::i;:::-;16734:23;;16729:28;;16776:34;16771:2;:39;;;;:::i;:::-;16764:46;;;;;:::i;:::-;;;16861:10;16848:23;;16854:2;16849;:7;;;;:::i;:::-;16848:23;;16843:28;;16890:34;16885:2;:39;;;;:::i;:::-;16878:46;;;;;:::i;:::-;;;16975:10;16962:23;;16968:2;16963;:7;;;;:::i;:::-;16962:23;;16957:28;;17004:34;16999:2;:39;;;;:::i;:::-;16992:46;;;;;:::i;:::-;;;17089:10;17076:23;;17082:2;17077;:7;;;;:::i;:::-;17076:23;;17071:28;;17118:34;17113:2;:39;;;;:::i;:::-;17106:46;;;;;:::i;:::-;;;17203:10;17190:23;;17196:2;17191;:7;;;;:::i;:::-;17190:23;;17185:28;;17232:34;17227:2;:39;;;;:::i;:::-;17220:46;;;;;:::i;:::-;;;17317:10;17304:23;;17310:2;17305;:7;;;;:::i;:::-;17304:23;;17299:28;;17346:34;17341:2;:39;;;;:::i;:::-;17334:46;;;;;:::i;:::-;;;17431:10;17418:23;;17424:2;17419;:7;;;;:::i;:::-;17418:23;;17413:28;;17460:34;17455:2;:39;;;;:::i;:::-;17448:46;;;;;:::i;:::-;;;17545:10;17532:23;;17538:2;17533;:7;;;;:::i;:::-;17532:23;;17527:28;;17574:34;17569:2;:39;;;;:::i;:::-;17562:46;;;;;:::i;:::-;;;17659:10;17646:23;;17652:2;17647;:7;;;;:::i;:::-;17646:23;;17641:28;;17688:34;17683:2;:39;;;;:::i;:::-;17676:46;;;;;:::i;:::-;;;17773:10;17760:23;;17766:2;17761;:7;;;;:::i;:::-;17760:23;;17755:28;;17802:34;17797:2;:39;;;;:::i;:::-;17790:46;;;;;:::i;:::-;;;17887:10;17874:23;;17880:2;17875;:7;;;;:::i;:::-;17874:23;;17869:28;;17916:34;17911:2;:39;;;;:::i;:::-;17904:46;;;;;:::i;:::-;;;18001:10;17988:23;;17994:2;17989;:7;;;;:::i;:::-;17988:23;;17983:28;;18030:34;18025:2;:39;;;;:::i;:::-;18018:46;;;;;:::i;:::-;;;18161:10;18154:17;;426:1;18154:17;;18148:2;18112:33;18106:3;:39;;;;:::i;:::-;:44;;;;:::i;:::-;:66;;;;:::i;:::-;18099:73;;;;14332:3896;;;;:::o;12545:439::-;12599:5;12613:9;12625:1;12613:13;;12633:9;12645:2;12633:14;;12664:3;12660:1;:7;12656:304;;;12709:61;12720:1;12716;:5;12709:61;;;12740:1;12734:7;;;;;12759:1;12752:8;;;;;:::i;:::-;;;12709:61;;;12656:304;;;12828:7;12838:3;12828:13;;12823:130;12847:1;12843;:5;;;12823:130;;;12887:1;12880:8;;426:1;12880:8;;12874:1;:15;12870:74;;12910:1;12904:7;;;;;;;12931:1;12924:8;;;;12870:74;12856:1;12850:7;;;;;;;12823:130;;;;12656:304;12975:3;12968:10;;;;12545:439;;;:::o;88:117:14:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:93::-;726:7;766:10;759:5;755:22;744:33;;690:93;;;:::o;789:120::-;861:23;878:5;861:23;:::i;:::-;854:5;851:34;841:62;;899:1;896;889:12;841:62;789:120;:::o;915:137::-;960:5;998:6;985:20;976:29;;1014:32;1040:5;1014:32;:::i;:::-;915:137;;;;:::o;1058:763::-;1143:6;1151;1159;1167;1216:3;1204:9;1195:7;1191:23;1187:33;1184:120;;;1223:79;;:::i;:::-;1184:120;1343:1;1368:53;1413:7;1404:6;1393:9;1389:22;1368:53;:::i;:::-;1358:63;;1314:117;1470:2;1496:53;1541:7;1532:6;1521:9;1517:22;1496:53;:::i;:::-;1486:63;;1441:118;1598:2;1624:52;1668:7;1659:6;1648:9;1644:22;1624:52;:::i;:::-;1614:62;;1569:117;1725:2;1751:53;1796:7;1787:6;1776:9;1772:22;1751:53;:::i;:::-;1741:63;;1696:118;1058:763;;;;;;;:::o;1827:118::-;1914:24;1932:5;1914:24;:::i;:::-;1909:3;1902:37;1827:118;;:::o;1951:222::-;2044:4;2082:2;2071:9;2067:18;2059:26;;2095:71;2163:1;2152:9;2148:17;2139:6;2095:71;:::i;:::-;1951:222;;;;:::o;2179:180::-;2227:77;2224:1;2217:88;2324:4;2321:1;2314:15;2348:4;2345:1;2338:15;2365:191;2405:4;2425:20;2443:1;2425:20;:::i;:::-;2420:25;;2459:20;2477:1;2459:20;:::i;:::-;2454:25;;2498:1;2495;2492:8;2489:34;;;2503:18;;:::i;:::-;2489:34;2548:1;2545;2541:9;2533:17;;2365:191;;;;:::o;2562:348::-;2602:7;2625:20;2643:1;2625:20;:::i;:::-;2620:25;;2659:20;2677:1;2659:20;:::i;:::-;2654:25;;2847:1;2779:66;2775:74;2772:1;2769:81;2764:1;2757:9;2750:17;2746:105;2743:131;;;2854:18;;:::i;:::-;2743:131;2902:1;2899;2895:9;2884:20;;2562:348;;;;:::o;2916:180::-;2964:77;2961:1;2954:88;3061:4;3058:1;3051:15;3085:4;3082:1;3075:15;3102:185;3142:1;3159:20;3177:1;3159:20;:::i;:::-;3154:25;;3193:20;3211:1;3193:20;:::i;:::-;3188:25;;3232:1;3222:35;;3237:18;;:::i;:::-;3222:35;3279:1;3276;3272:9;3267:14;;3102:185;;;;:::o;3293:305::-;3333:3;3352:20;3370:1;3352:20;:::i;:::-;3347:25;;3386:20;3404:1;3386:20;:::i;:::-;3381:25;;3540:1;3472:66;3468:74;3465:1;3462:81;3459:107;;;3546:18;;:::i;:::-;3459:107;3590:1;3587;3583:9;3576:16;;3293:305;;;;:::o;3604:86::-;3639:7;3679:4;3672:5;3668:16;3657:27;;3604:86;;;:::o;3696:185::-;3734:4;3754:18;3770:1;3754:18;:::i;:::-;3749:23;;3786:18;3802:1;3786:18;:::i;:::-;3781:23;;3823:1;3820;3817:8;3814:34;;;3828:18;;:::i;:::-;3814:34;3873:1;3870;3866:9;3858:17;;3696:185;;;;:::o;3887:180::-;3935:77;3932:1;3925:88;4032:4;4029:1;4022:15;4056:4;4053:1;4046:15;4073:167;4110:3;4133:22;4149:5;4133:22;:::i;:::-;4124:31;;4177:4;4170:5;4167:15;4164:41;;;4185:18;;:::i;:::-;4164:41;4232:1;4225:5;4221:13;4214:20;;4073:167;;;:::o;4246:237::-;4284:3;4303:18;4319:1;4303:18;:::i;:::-;4298:23;;4335:18;4351:1;4335:18;:::i;:::-;4330:23;;4425:1;4419:4;4415:12;4412:1;4409:19;4406:45;;;4431:18;;:::i;:::-;4406:45;4475:1;4472;4468:9;4461:16;;4246:237;;;;:::o;4489:179::-;4527:1;4544:18;4560:1;4544:18;:::i;:::-;4539:23;;4576:18;4592:1;4576:18;:::i;:::-;4571:23;;4613:1;4603:35;;4618:18;;:::i;:::-;4603:35;4660:1;4657;4653:9;4648:14;;4489:179;;;;:::o;4674:180::-;4722:77;4719:1;4712:88;4819:4;4816:1;4809:15;4843:4;4840:1;4833:15",
  "source": "/* Apache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\n\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"{}\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\n\nCopyright 2017 Bprotocol Foundation\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. */\n\npragma solidity ^0.8.10;\n\nimport \"openzeppelin-solidity/contracts/utils/math/SafeMath.sol\";\n\nimport \"./Math/Power.sol\";\n\n /**\n * @title Bancor formula by Bancor\n * @dev Modified from the original by Slava Balasanov\n * https://github.com/bancorprotocol/contracts\n * Split Power.sol out from BancorFormula.sol and replace SafeMath formulas with zeppelin's SafeMath\n * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements;\n * and to You under the Apache License, Version 2.0. \"\n */\ncontract BancorFormula is Power {\n  using SafeMath for uint256;\n   uint32 private constant MAX_WEIGHT = 1000000;\n\n   /**\n   * @dev given a token supply, connector balance, weight and a deposit amount (in the connector token),\n   * calculates the return for a given conversion (in the main token)\n   *\n   * Formula:\n   * Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)\n   *\n   * @param _supply              token total supply\n   * @param _connectorBalance    total connector balance\n   * @param _connectorWeight     connector weight, represented in ppm, 1-1000000\n   * @param _depositAmount       deposit amount, in connector token\n   *\n   *  @return purchase return amount\n  */\n  function calculatePurchaseReturn(\n    uint256 _supply,\n    uint256 _connectorBalance,\n    uint32 _connectorWeight,\n    uint256 _depositAmount) public view  returns (uint256)\n  {\n    // validate input\n    require(_supply > 0 && _connectorBalance > 0 && _connectorWeight > 0 && _connectorWeight <= MAX_WEIGHT);\n     // special case for 0 deposit amount\n    if (_depositAmount == 0) {\n      return 0;\n    }\n     // special case if the weight = 100%\n    if (_connectorWeight == MAX_WEIGHT) {\n      return _supply.mul(_depositAmount).div(_connectorBalance);\n    }\n     uint256 result;\n    uint8 precision;\n    uint256 baseN = _depositAmount.add(_connectorBalance);\n    (result, precision) = power(\n      baseN, _connectorBalance, _connectorWeight, MAX_WEIGHT\n    );\n    uint256 newTokenSupply = _supply.mul(result) >> precision;\n    return newTokenSupply - _supply;\n  }\n   /**\n   * @dev given a token supply, connector balance, weight and a sell amount (in the main token),\n   * calculates the return for a given conversion (in the connector token)\n   *\n   * Formula:\n   * Return = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))\n   *\n   * @param _supply              token total supply\n   * @param _connectorBalance    total connector\n   * @param _connectorWeight     constant connector Weight, represented in ppm, 1-1000000\n   * @param _sellAmount          sell amount, in the token itself\n   *\n   * @return sale return amount\n  */\n  function calculateSaleReturn(\n    uint256 _supply,\n    uint256 _connectorBalance,\n    uint32 _connectorWeight,\n    uint256 _sellAmount) public view returns (uint256)\n  {\n    // validate input\n    require(_supply > 0 && _connectorBalance > 0 && _connectorWeight > 0 && _connectorWeight <= MAX_WEIGHT && _sellAmount <= _supply);\n     // special case for 0 sell amount\n    if (_sellAmount == 0) {\n      return 0;\n    }\n     // special case for selling the entire supply\n    if (_sellAmount == _supply) {\n      return _connectorBalance;\n    }\n     // special case if the weight = 100%\n    if (_connectorWeight == MAX_WEIGHT) {\n      return _connectorBalance.mul(_sellAmount).div(_supply);\n    }\n     uint256 result;\n    uint8 precision;\n    uint256 baseD = _supply - _sellAmount;\n    (result, precision) = power(\n      _supply, baseD, MAX_WEIGHT, _connectorWeight\n    );\n    uint256 oldBalance = _connectorBalance.mul(result);\n    uint256 newBalance = _connectorBalance << precision;\n    return oldBalance.sub(newBalance).div(result);\n  }\n}\n",
  "sourcePath": "C:\\Users\\Vamsi\\demi\\contracts\\BancorFormula.sol",
  "ast": {
    "absolutePath": "project:/contracts/BancorFormula.sol",
    "exportedSymbols": {
      "BancorFormula": [
        1299
      ],
      "Power": [
        3036
      ],
      "SafeMath": [
        1087
      ]
    },
    "id": 1300,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1089,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "10255:24:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "id": 1090,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1300,
        "sourceUnit": 1088,
        "src": "10281:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Math/Power.sol",
        "file": "./Math/Power.sol",
        "id": 1091,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1300,
        "sourceUnit": 3037,
        "src": "10348:26:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1093,
              "name": "Power",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3036,
              "src": "10805:5:6"
            },
            "id": 1094,
            "nodeType": "InheritanceSpecifier",
            "src": "10805:5:6"
          }
        ],
        "canonicalName": "BancorFormula",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1092,
          "nodeType": "StructuredDocumentation",
          "src": "10377:401:6",
          "text": " @title Bancor formula by Bancor\n @dev Modified from the original by Slava Balasanov\n https://github.com/bancorprotocol/contracts\n Split Power.sol out from BancorFormula.sol and replace SafeMath formulas with zeppelin's SafeMath\n Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements;\n and to You under the Apache License, Version 2.0. \""
        },
        "fullyImplemented": true,
        "id": 1299,
        "linearizedBaseContracts": [
          1299,
          3036
        ],
        "name": "BancorFormula",
        "nameLocation": "10788:13:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1097,
            "libraryName": {
              "id": 1095,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1087,
              "src": "10821:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "10815:27:6",
            "typeName": {
              "id": 1096,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "10834:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 1100,
            "mutability": "constant",
            "name": "MAX_WEIGHT",
            "nameLocation": "10870:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 1299,
            "src": "10846:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 1098,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "10846:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "31303030303030",
              "id": 1099,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "10883:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1000000"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "11684:688:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1115,
                                "name": "_supply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1103,
                                "src": "11720:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11730:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11720:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1118,
                                "name": "_connectorBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1105,
                                "src": "11735:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11755:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11735:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "11720:36:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 1124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1122,
                              "name": "_connectorWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "11760:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11779:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11760:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11720:60:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1126,
                            "name": "_connectorWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "11784:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1127,
                            "name": "MAX_WEIGHT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1100,
                            "src": "11804:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "11784:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11720:94:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11712:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11712:103:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "11712:103:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1132,
                      "name": "_depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1109,
                      "src": "11867:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11885:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11867:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1138,
                  "nodeType": "IfStatement",
                  "src": "11863:48:6",
                  "trueBody": {
                    "id": 1137,
                    "nodeType": "Block",
                    "src": "11888:23:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11903:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1113,
                        "id": 1136,
                        "nodeType": "Return",
                        "src": "11896:8:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1139,
                      "name": "_connectorWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1107,
                      "src": "11962:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1140,
                      "name": "MAX_WEIGHT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "11982:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "11962:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1151,
                  "nodeType": "IfStatement",
                  "src": "11958:108:6",
                  "trueBody": {
                    "id": 1150,
                    "nodeType": "Block",
                    "src": "11994:72:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1147,
                              "name": "_connectorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "12041:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1144,
                                  "name": "_depositAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1109,
                                  "src": "12021:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1142,
                                  "name": "_supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1103,
                                  "src": "12009:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 981,
                                "src": "12009:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12009:27:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 996,
                            "src": "12009:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12009:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1113,
                        "id": 1149,
                        "nodeType": "Return",
                        "src": "12002:57:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1153,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "12080:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "12072:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1152,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12072:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1154,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12072:14:6"
                },
                {
                  "assignments": [
                    1156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1156,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "12098:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "12092:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1155,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12092:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1157,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12092:15:6"
                },
                {
                  "assignments": [
                    1159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1159,
                      "mutability": "mutable",
                      "name": "baseN",
                      "nameLocation": "12121:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "12113:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1158,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12113:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1164,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1162,
                        "name": "_connectorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "12148:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1160,
                        "name": "_depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "12129:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 951,
                      "src": "12129:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12129:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12113:53:6"
                },
                {
                  "expression": {
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1165,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1153,
                          "src": "12173:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1166,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1156,
                          "src": "12181:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 1167,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "12172:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1169,
                          "name": "baseN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1159,
                          "src": "12207:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1170,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1105,
                          "src": "12214:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1171,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1107,
                          "src": "12233:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 1172,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "12251:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 1168,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "12194:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 1173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12194:73:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "12172:95:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1175,
                  "nodeType": "ExpressionStatement",
                  "src": "12172:95:6"
                },
                {
                  "assignments": [
                    1177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1177,
                      "mutability": "mutable",
                      "name": "newTokenSupply",
                      "nameLocation": "12281:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "12273:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1176,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12273:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1184,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1180,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1153,
                          "src": "12310:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1178,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1103,
                          "src": "12298:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "12298:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12298:19:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "id": 1182,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1156,
                      "src": "12321:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "12298:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12273:57:6"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1185,
                      "name": "newTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1177,
                      "src": "12343:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1186,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1103,
                      "src": "12360:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12343:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1113,
                  "id": 1188,
                  "nodeType": "Return",
                  "src": "12336:31:6"
                }
              ]
            },
            "documentation": {
              "id": 1101,
              "nodeType": "StructuredDocumentation",
              "src": "10896:609:6",
              "text": " @dev given a token supply, connector balance, weight and a deposit amount (in the connector token),\n calculates the return for a given conversion (in the main token)\n Formula:\n Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)\n @param _supply              token total supply\n @param _connectorBalance    total connector balance\n @param _connectorWeight     connector weight, represented in ppm, 1-1000000\n @param _depositAmount       deposit amount, in connector token\n  @return purchase return amount"
            },
            "functionSelector": "29a00e7c",
            "id": 1190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePurchaseReturn",
            "nameLocation": "11517:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "11554:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "11546:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11546:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1105,
                  "mutability": "mutable",
                  "name": "_connectorBalance",
                  "nameLocation": "11575:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "11567:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11567:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "_connectorWeight",
                  "nameLocation": "11605:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "11598:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11598:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "_depositAmount",
                  "nameLocation": "11635:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "11627:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11627:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11540:110:6"
            },
            "returnParameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "11673:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11673:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11672:9:6"
            },
            "scope": 1299,
            "src": "11508:864:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1297,
              "nodeType": "Block",
              "src": "13150:866:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1205,
                                  "name": "_supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1193,
                                  "src": "13186:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13196:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "13186:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1208,
                                  "name": "_connectorBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1195,
                                  "src": "13201:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13221:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "13201:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "13186:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 1214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1212,
                                "name": "_connectorWeight",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1197,
                                "src": "13226:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13245:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "13226:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "13186:60:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1216,
                              "name": "_connectorWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1197,
                              "src": "13250:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 1217,
                              "name": "MAX_WEIGHT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1100,
                              "src": "13270:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "13250:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13186:94:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1220,
                            "name": "_sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "13284:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1221,
                            "name": "_supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1193,
                            "src": "13299:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13284:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13186:120:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13178:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13178:129:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "13178:129:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1226,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "13356:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13371:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13356:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1232,
                  "nodeType": "IfStatement",
                  "src": "13352:45:6",
                  "trueBody": {
                    "id": 1231,
                    "nodeType": "Block",
                    "src": "13374:23:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13389:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1203,
                        "id": 1230,
                        "nodeType": "Return",
                        "src": "13382:8:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1233,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "13457:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1234,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "13472:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13457:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1239,
                  "nodeType": "IfStatement",
                  "src": "13453:67:6",
                  "trueBody": {
                    "id": 1238,
                    "nodeType": "Block",
                    "src": "13481:39:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1236,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "13496:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1203,
                        "id": 1237,
                        "nodeType": "Return",
                        "src": "13489:24:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 1242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1240,
                      "name": "_connectorWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1197,
                      "src": "13571:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1241,
                      "name": "MAX_WEIGHT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "13591:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "13571:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1252,
                  "nodeType": "IfStatement",
                  "src": "13567:105:6",
                  "trueBody": {
                    "id": 1251,
                    "nodeType": "Block",
                    "src": "13603:69:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1248,
                              "name": "_supply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "13657:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1245,
                                  "name": "_sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1199,
                                  "src": "13640:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1243,
                                  "name": "_connectorBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1195,
                                  "src": "13618:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 981,
                                "src": "13618:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13618:34:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 996,
                            "src": "13618:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13618:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1203,
                        "id": 1250,
                        "nodeType": "Return",
                        "src": "13611:54:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1254,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "13686:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "13678:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1253,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13678:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1255,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13678:14:6"
                },
                {
                  "assignments": [
                    1257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1257,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "13704:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "13698:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1256,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "13698:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1258,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13698:15:6"
                },
                {
                  "assignments": [
                    1260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1260,
                      "mutability": "mutable",
                      "name": "baseD",
                      "nameLocation": "13727:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "13719:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13719:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1264,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1261,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "13735:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1262,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "13745:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13735:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13719:37:6"
                },
                {
                  "expression": {
                    "id": 1274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1265,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "13763:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1266,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1257,
                          "src": "13771:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 1267,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13762:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1269,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "13797:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1270,
                          "name": "baseD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1260,
                          "src": "13806:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1271,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "13813:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 1272,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "13825:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 1268,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "13784:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 1273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13784:63:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "13762:85:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1275,
                  "nodeType": "ExpressionStatement",
                  "src": "13762:85:6"
                },
                {
                  "assignments": [
                    1277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1277,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "13861:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "13853:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1276,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13853:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1282,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1280,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "13896:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1278,
                        "name": "_connectorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "13874:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "13874:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13874:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13853:50:6"
                },
                {
                  "assignments": [
                    1284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1284,
                      "mutability": "mutable",
                      "name": "newBalance",
                      "nameLocation": "13917:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "13909:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13909:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1288,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1285,
                      "name": "_connectorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "13930:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "id": 1286,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1257,
                      "src": "13951:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "13930:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13909:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1294,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "14004:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1291,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "13988:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1289,
                            "name": "oldBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "13973:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "13973:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13973:26:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 996,
                      "src": "13973:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13973:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1203,
                  "id": 1296,
                  "nodeType": "Return",
                  "src": "13966:45:6"
                }
              ]
            },
            "documentation": {
              "id": 1191,
              "nodeType": "StructuredDocumentation",
              "src": "12376:603:6",
              "text": " @dev given a token supply, connector balance, weight and a sell amount (in the main token),\n calculates the return for a given conversion (in the connector token)\n Formula:\n Return = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))\n @param _supply              token total supply\n @param _connectorBalance    total connector\n @param _connectorWeight     constant connector Weight, represented in ppm, 1-1000000\n @param _sellAmount          sell amount, in the token itself\n @return sale return amount"
            },
            "functionSelector": "49f9b0f7",
            "id": 1298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSaleReturn",
            "nameLocation": "12991:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "13024:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "13016:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13016:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "_connectorBalance",
                  "nameLocation": "13045:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "13037:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13037:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1197,
                  "mutability": "mutable",
                  "name": "_connectorWeight",
                  "nameLocation": "13075:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "13068:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13068:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "_sellAmount",
                  "nameLocation": "13105:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "13097:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13097:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13010:107:6"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "13139:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13139:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13138:9:6"
            },
            "scope": 1299,
            "src": "12982:1034:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1300,
        "src": "10779:3239:6",
        "usedErrors": []
      }
    ],
    "src": "10255:3764:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/BancorFormula.sol",
    "exportedSymbols": {
      "BancorFormula": [
        1299
      ],
      "Power": [
        3036
      ],
      "SafeMath": [
        1087
      ]
    },
    "id": 1300,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1089,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "10255:24:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "id": 1090,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1300,
        "sourceUnit": 1088,
        "src": "10281:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Math/Power.sol",
        "file": "./Math/Power.sol",
        "id": 1091,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1300,
        "sourceUnit": 3037,
        "src": "10348:26:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1093,
              "name": "Power",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3036,
              "src": "10805:5:6"
            },
            "id": 1094,
            "nodeType": "InheritanceSpecifier",
            "src": "10805:5:6"
          }
        ],
        "canonicalName": "BancorFormula",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1092,
          "nodeType": "StructuredDocumentation",
          "src": "10377:401:6",
          "text": " @title Bancor formula by Bancor\n @dev Modified from the original by Slava Balasanov\n https://github.com/bancorprotocol/contracts\n Split Power.sol out from BancorFormula.sol and replace SafeMath formulas with zeppelin's SafeMath\n Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements;\n and to You under the Apache License, Version 2.0. \""
        },
        "fullyImplemented": true,
        "id": 1299,
        "linearizedBaseContracts": [
          1299,
          3036
        ],
        "name": "BancorFormula",
        "nameLocation": "10788:13:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1097,
            "libraryName": {
              "id": 1095,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1087,
              "src": "10821:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "10815:27:6",
            "typeName": {
              "id": 1096,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "10834:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 1100,
            "mutability": "constant",
            "name": "MAX_WEIGHT",
            "nameLocation": "10870:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 1299,
            "src": "10846:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 1098,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "10846:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "31303030303030",
              "id": 1099,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "10883:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1000000"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "11684:688:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1115,
                                "name": "_supply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1103,
                                "src": "11720:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11730:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11720:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1118,
                                "name": "_connectorBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1105,
                                "src": "11735:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11755:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11735:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "11720:36:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 1124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1122,
                              "name": "_connectorWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "11760:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11779:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11760:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11720:60:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1126,
                            "name": "_connectorWeight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "11784:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1127,
                            "name": "MAX_WEIGHT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1100,
                            "src": "11804:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "11784:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11720:94:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11712:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11712:103:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "11712:103:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1132,
                      "name": "_depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1109,
                      "src": "11867:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11885:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11867:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1138,
                  "nodeType": "IfStatement",
                  "src": "11863:48:6",
                  "trueBody": {
                    "id": 1137,
                    "nodeType": "Block",
                    "src": "11888:23:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11903:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1113,
                        "id": 1136,
                        "nodeType": "Return",
                        "src": "11896:8:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1139,
                      "name": "_connectorWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1107,
                      "src": "11962:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1140,
                      "name": "MAX_WEIGHT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "11982:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "11962:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1151,
                  "nodeType": "IfStatement",
                  "src": "11958:108:6",
                  "trueBody": {
                    "id": 1150,
                    "nodeType": "Block",
                    "src": "11994:72:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1147,
                              "name": "_connectorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "12041:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1144,
                                  "name": "_depositAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1109,
                                  "src": "12021:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1142,
                                  "name": "_supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1103,
                                  "src": "12009:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 981,
                                "src": "12009:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12009:27:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 996,
                            "src": "12009:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12009:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1113,
                        "id": 1149,
                        "nodeType": "Return",
                        "src": "12002:57:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1153,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "12080:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "12072:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1152,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12072:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1154,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12072:14:6"
                },
                {
                  "assignments": [
                    1156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1156,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "12098:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "12092:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1155,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12092:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1157,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12092:15:6"
                },
                {
                  "assignments": [
                    1159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1159,
                      "mutability": "mutable",
                      "name": "baseN",
                      "nameLocation": "12121:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "12113:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1158,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12113:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1164,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1162,
                        "name": "_connectorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "12148:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1160,
                        "name": "_depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "12129:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 951,
                      "src": "12129:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12129:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12113:53:6"
                },
                {
                  "expression": {
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1165,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1153,
                          "src": "12173:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1166,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1156,
                          "src": "12181:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 1167,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "12172:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1169,
                          "name": "baseN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1159,
                          "src": "12207:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1170,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1105,
                          "src": "12214:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1171,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1107,
                          "src": "12233:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 1172,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "12251:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 1168,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "12194:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 1173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12194:73:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "12172:95:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1175,
                  "nodeType": "ExpressionStatement",
                  "src": "12172:95:6"
                },
                {
                  "assignments": [
                    1177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1177,
                      "mutability": "mutable",
                      "name": "newTokenSupply",
                      "nameLocation": "12281:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "12273:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1176,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12273:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1184,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1180,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1153,
                          "src": "12310:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1178,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1103,
                          "src": "12298:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 981,
                        "src": "12298:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12298:19:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">>",
                    "rightExpression": {
                      "id": 1182,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1156,
                      "src": "12321:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "12298:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12273:57:6"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1185,
                      "name": "newTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1177,
                      "src": "12343:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1186,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1103,
                      "src": "12360:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12343:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1113,
                  "id": 1188,
                  "nodeType": "Return",
                  "src": "12336:31:6"
                }
              ]
            },
            "documentation": {
              "id": 1101,
              "nodeType": "StructuredDocumentation",
              "src": "10896:609:6",
              "text": " @dev given a token supply, connector balance, weight and a deposit amount (in the connector token),\n calculates the return for a given conversion (in the main token)\n Formula:\n Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)\n @param _supply              token total supply\n @param _connectorBalance    total connector balance\n @param _connectorWeight     connector weight, represented in ppm, 1-1000000\n @param _depositAmount       deposit amount, in connector token\n  @return purchase return amount"
            },
            "functionSelector": "29a00e7c",
            "id": 1190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePurchaseReturn",
            "nameLocation": "11517:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "11554:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "11546:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11546:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1105,
                  "mutability": "mutable",
                  "name": "_connectorBalance",
                  "nameLocation": "11575:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "11567:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11567:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "_connectorWeight",
                  "nameLocation": "11605:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "11598:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11598:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "_depositAmount",
                  "nameLocation": "11635:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "11627:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11627:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11540:110:6"
            },
            "returnParameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "11673:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11673:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11672:9:6"
            },
            "scope": 1299,
            "src": "11508:864:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1297,
              "nodeType": "Block",
              "src": "13150:866:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1205,
                                  "name": "_supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1193,
                                  "src": "13186:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13196:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "13186:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1208,
                                  "name": "_connectorBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1195,
                                  "src": "13201:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13221:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "13201:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "13186:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 1214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1212,
                                "name": "_connectorWeight",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1197,
                                "src": "13226:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13245:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "13226:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "13186:60:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1216,
                              "name": "_connectorWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1197,
                              "src": "13250:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 1217,
                              "name": "MAX_WEIGHT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1100,
                              "src": "13270:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "13250:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13186:94:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1220,
                            "name": "_sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "13284:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1221,
                            "name": "_supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1193,
                            "src": "13299:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13284:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13186:120:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13178:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13178:129:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "13178:129:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1226,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "13356:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13371:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13356:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1232,
                  "nodeType": "IfStatement",
                  "src": "13352:45:6",
                  "trueBody": {
                    "id": 1231,
                    "nodeType": "Block",
                    "src": "13374:23:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13389:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1203,
                        "id": 1230,
                        "nodeType": "Return",
                        "src": "13382:8:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1233,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "13457:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1234,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "13472:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13457:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1239,
                  "nodeType": "IfStatement",
                  "src": "13453:67:6",
                  "trueBody": {
                    "id": 1238,
                    "nodeType": "Block",
                    "src": "13481:39:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1236,
                          "name": "_connectorBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "13496:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1203,
                        "id": 1237,
                        "nodeType": "Return",
                        "src": "13489:24:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 1242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1240,
                      "name": "_connectorWeight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1197,
                      "src": "13571:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1241,
                      "name": "MAX_WEIGHT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "13591:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "13571:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1252,
                  "nodeType": "IfStatement",
                  "src": "13567:105:6",
                  "trueBody": {
                    "id": 1251,
                    "nodeType": "Block",
                    "src": "13603:69:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1248,
                              "name": "_supply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "13657:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1245,
                                  "name": "_sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1199,
                                  "src": "13640:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1243,
                                  "name": "_connectorBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1195,
                                  "src": "13618:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 981,
                                "src": "13618:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13618:34:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 996,
                            "src": "13618:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13618:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1203,
                        "id": 1250,
                        "nodeType": "Return",
                        "src": "13611:54:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1254,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "13686:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "13678:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1253,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13678:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1255,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13678:14:6"
                },
                {
                  "assignments": [
                    1257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1257,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "13704:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "13698:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1256,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "13698:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1258,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13698:15:6"
                },
                {
                  "assignments": [
                    1260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1260,
                      "mutability": "mutable",
                      "name": "baseD",
                      "nameLocation": "13727:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "13719:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13719:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1264,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1261,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "13735:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1262,
                      "name": "_sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "13745:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13735:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13719:37:6"
                },
                {
                  "expression": {
                    "id": 1274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1265,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "13763:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1266,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1257,
                          "src": "13771:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 1267,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13762:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1269,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "13797:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1270,
                          "name": "baseD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1260,
                          "src": "13806:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1271,
                          "name": "MAX_WEIGHT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "13813:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 1272,
                          "name": "_connectorWeight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "13825:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 1268,
                        "name": "power",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "13784:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$returns$_t_uint256_$_t_uint8_$",
                          "typeString": "function (uint256,uint256,uint32,uint32) view returns (uint256,uint8)"
                        }
                      },
                      "id": 1273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13784:63:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                        "typeString": "tuple(uint256,uint8)"
                      }
                    },
                    "src": "13762:85:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1275,
                  "nodeType": "ExpressionStatement",
                  "src": "13762:85:6"
                },
                {
                  "assignments": [
                    1277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1277,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "13861:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "13853:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1276,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13853:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1282,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1280,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "13896:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1278,
                        "name": "_connectorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "13874:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "13874:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13874:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13853:50:6"
                },
                {
                  "assignments": [
                    1284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1284,
                      "mutability": "mutable",
                      "name": "newBalance",
                      "nameLocation": "13917:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "13909:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13909:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1288,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1285,
                      "name": "_connectorBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "13930:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "id": 1286,
                      "name": "precision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1257,
                      "src": "13951:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "13930:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13909:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1294,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "14004:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1291,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "13988:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1289,
                            "name": "oldBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "13973:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "13973:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13973:26:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 996,
                      "src": "13973:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13973:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1203,
                  "id": 1296,
                  "nodeType": "Return",
                  "src": "13966:45:6"
                }
              ]
            },
            "documentation": {
              "id": 1191,
              "nodeType": "StructuredDocumentation",
              "src": "12376:603:6",
              "text": " @dev given a token supply, connector balance, weight and a sell amount (in the main token),\n calculates the return for a given conversion (in the connector token)\n Formula:\n Return = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))\n @param _supply              token total supply\n @param _connectorBalance    total connector\n @param _connectorWeight     constant connector Weight, represented in ppm, 1-1000000\n @param _sellAmount          sell amount, in the token itself\n @return sale return amount"
            },
            "functionSelector": "49f9b0f7",
            "id": 1298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSaleReturn",
            "nameLocation": "12991:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "13024:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "13016:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13016:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "_connectorBalance",
                  "nameLocation": "13045:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "13037:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13037:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1197,
                  "mutability": "mutable",
                  "name": "_connectorWeight",
                  "nameLocation": "13075:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "13068:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13068:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "_sellAmount",
                  "nameLocation": "13105:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "13097:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13097:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13010:107:6"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "13139:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13139:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13138:9:6"
            },
            "scope": 1299,
            "src": "12982:1034:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1300,
        "src": "10779:3239:6",
        "usedErrors": []
      }
    ],
    "src": "10255:3764:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-23T08:00:15.912Z",
  "devdoc": {
    "details": "Modified from the original by Slava Balasanov https://github.com/bancorprotocol/contracts Split Power.sol out from BancorFormula.sol and replace SafeMath formulas with zeppelin's SafeMath Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements; and to You under the Apache License, Version 2.0. \"",
    "kind": "dev",
    "methods": {
      "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a token supply, connector balance, weight and a deposit amount (in the connector token), calculates the return for a given conversion (in the main token) Formula: Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)",
        "params": {
          "_connectorBalance": "total connector balance",
          "_connectorWeight": "connector weight, represented in ppm, 1-1000000",
          "_depositAmount": "deposit amount, in connector token",
          "_supply": "token total supply"
        },
        "returns": {
          "_0": "purchase return amount"
        }
      },
      "calculateSaleReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a token supply, connector balance, weight and a sell amount (in the main token), calculates the return for a given conversion (in the connector token) Formula: Return = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))",
        "params": {
          "_connectorBalance": "total connector",
          "_connectorWeight": "constant connector Weight, represented in ppm, 1-1000000",
          "_sellAmount": "sell amount, in the token itself",
          "_supply": "token total supply"
        },
        "returns": {
          "_0": "sale return amount"
        }
      }
    },
    "title": "Bancor formula by Bancor",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}